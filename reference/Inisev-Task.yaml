openapi: 3.1.0
info:
  title: 'Inisev Task '
  version: '1.0'
  summary: Inisev assesment task
servers:
  - url: 'http://localhost:3000'
paths:
  /api/post:
    get:
      summary: List Posts
      responses: {}
      operationId: get-api-post
      tags:
        - Post Management
    post:
      summary: Create Post
      tags:
        - Subscriptions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      title:
                        type: string
                        minLength: 1
                      content:
                        type: string
                        minLength: 1
                      slug:
                        type: string
                        minLength: 1
                      website_id:
                        type: number
                      uuid:
                        type: string
                        minLength: 1
                      updated_at:
                        type: string
                        minLength: 1
                      created_at:
                        type: string
                        minLength: 1
                      id:
                        type: number
                      website:
                        type: object
                        properties:
                          id:
                            type: number
                          uuid:
                            type: string
                            minLength: 1
                          name:
                            type: string
                            minLength: 1
                          url:
                            type: string
                            minLength: 1
                          status:
                            type: number
                          created_at:
                            type: string
                            minLength: 1
                          updated_at:
                            type: string
                            minLength: 1
                          deleted_at: {}
                          subscriptions:
                            type: array
                            uniqueItems: true
                            minItems: 1
                            items:
                              required:
                                - id
                                - uuid
                                - subscription_user_id
                                - website_id
                                - isActive
                                - created_at
                                - updated_at
                              properties:
                                id:
                                  type: number
                                uuid:
                                  type: string
                                  minLength: 1
                                subscription_user_id:
                                  type: number
                                website_id:
                                  type: number
                                isActive:
                                  type: number
                                created_at:
                                  type: string
                                  minLength: 1
                                updated_at:
                                  type: string
                                  minLength: 1
                                deleted_at: {}
                                sent_posts:
                                  type: array
                                  uniqueItems: true
                                  minItems: 1
                                  items:
                                    required:
                                      - id
                                      - subscription_user_id
                                      - subscription_id
                                      - post_id
                                      - created_at
                                      - updated_at
                                    properties:
                                      id:
                                        type: number
                                      subscription_user_id:
                                        type: number
                                      subscription_id:
                                        type: number
                                      post_id:
                                        type: number
                                      created_at:
                                        type: string
                                        minLength: 1
                                      updated_at:
                                        type: string
                                        minLength: 1
                        required:
                          - id
                          - uuid
                          - name
                          - url
                          - status
                          - created_at
                          - updated_at
                          - subscriptions
                    required:
                      - title
                      - content
                      - slug
                      - website_id
                      - uuid
                      - updated_at
                      - created_at
                      - id
                      - website
                  status:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - data
                  - status
                  - message
                x-examples:
                  example-1:
                    data:
                      title: Awesome postasd
                      content: Test content
                      slug: example-post-28
                      website_id: 3
                      uuid: c0cf5df4-7ff8-4868-8ce8-a6b63e898f4f
                      updated_at: '2022-04-17T15:32:28.000000Z'
                      created_at: '2022-04-17T15:32:28.000000Z'
                      id: 10
                      website:
                        id: 3
                        uuid: bf6ca748-c26a-4549-a2d9-f8079df9c05f
                        name: Website cool
                        url: 'http://example.com'
                        status: 0
                        created_at: '2022-04-17T13:35:41.000000Z'
                        updated_at: '2022-04-17T13:35:41.000000Z'
                        deleted_at: null
                        subscriptions:
                          - id: 1
                            uuid: 6043bbd8-af60-4dae-a092-a4f5a96b959e
                            subscription_user_id: 2
                            website_id: 3
                            isActive: 1
                            created_at: '2022-04-17T14:37:55.000000Z'
                            updated_at: '2022-04-17T14:37:55.000000Z'
                            deleted_at: null
                            sent_posts:
                              - id: 1
                                subscription_user_id: 2
                                subscription_id: 1
                                post_id: 1
                                created_at: '2022-04-17T15:05:52.000000Z'
                                updated_at: '2022-04-17T15:05:52.000000Z'
                              - id: 2
                                subscription_user_id: 2
                                subscription_id: 1
                                post_id: 2
                                created_at: '2022-04-17T15:05:56.000000Z'
                                updated_at: '2022-04-17T15:05:56.000000Z'
                              - id: 3
                                subscription_user_id: 2
                                subscription_id: 1
                                post_id: 3
                                created_at: '2022-04-17T15:24:47.000000Z'
                                updated_at: '2022-04-17T15:24:47.000000Z'
                              - id: 4
                                subscription_user_id: 2
                                subscription_id: 1
                                post_id: 4
                                created_at: '2022-04-17T15:24:50.000000Z'
                                updated_at: '2022-04-17T15:24:50.000000Z'
                              - id: 5
                                subscription_user_id: 2
                                subscription_id: 1
                                post_id: 5
                                created_at: '2022-04-17T15:24:53.000000Z'
                                updated_at: '2022-04-17T15:24:53.000000Z'
                              - id: 6
                                subscription_user_id: 2
                                subscription_id: 1
                                post_id: 6
                                created_at: '2022-04-17T15:24:56.000000Z'
                                updated_at: '2022-04-17T15:24:56.000000Z'
                              - id: 7
                                subscription_user_id: 2
                                subscription_id: 1
                                post_id: 7
                                created_at: '2022-04-17T15:24:59.000000Z'
                                updated_at: '2022-04-17T15:24:59.000000Z'
                              - id: 8
                                subscription_user_id: 2
                                subscription_id: 1
                                post_id: 8
                                created_at: '2022-04-17T15:25:03.000000Z'
                                updated_at: '2022-04-17T15:25:03.000000Z'
                              - id: 9
                                subscription_user_id: 2
                                subscription_id: 1
                                post_id: 9
                                created_at: '2022-04-17T15:26:14.000000Z'
                                updated_at: '2022-04-17T15:26:14.000000Z'
                    status: success
                    message: Post added successfully
      operationId: post-api-post
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                title:
                  type: string
                  minLength: 1
                content:
                  type: string
                  minLength: 1
                website_id:
                  type: number
                slug:
                  type: string
                  minLength: 1
              required:
                - title
                - content
                - website_id
                - slug
              x-examples:
                example-1:
                  title: Awesome postasd
                  content: Test content
                  website_id: 3
                  slug: example-post-27
  /api/website:
    get:
      summary: List websites
      tags:
        - Website
      responses: {}
      operationId: get-api-website
    post:
      summary: Create website
      tags:
        - Website
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        minLength: 1
                      url:
                        type: string
                        minLength: 1
                      uuid:
                        type: string
                        minLength: 1
                      updated_at:
                        type: string
                        minLength: 1
                      created_at:
                        type: string
                        minLength: 1
                      id:
                        type: number
                    required:
                      - name
                      - url
                      - uuid
                      - updated_at
                      - created_at
                      - id
                  status:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - data
                  - status
                  - message
                x-examples:
                  example-1:
                    data:
                      name: Website cool
                      url: 'http://example.com'
                      uuid: bf6ca748-c26a-4549-a2d9-f8079df9c05f
                      updated_at: '2022-04-17T13:35:41.000000Z'
                      created_at: '2022-04-17T13:35:41.000000Z'
                      id: 3
                    status: success
                    message: Website created successfully
            application/xml:
              schema:
                type: object
                properties: {}
      operationId: post-api-website
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                url:
                  type: string
                  minLength: 1
              required:
                - name
                - url
              x-examples:
                example-1:
                  name: Website cool
                  url: 'http://example.com'
  /api/subscription-users:
    get:
      summary: List users
      tags:
        - Subscription Users
      responses: {}
      operationId: get-api-subscription-users
    post:
      summary: Create user
      tags:
        - Subscription Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        minLength: 1
                      email:
                        type: string
                        minLength: 1
                      uuid:
                        type: string
                        minLength: 1
                      updated_at:
                        type: string
                        minLength: 1
                      created_at:
                        type: string
                        minLength: 1
                      id:
                        type: number
                    required:
                      - name
                      - email
                      - uuid
                      - updated_at
                      - created_at
                      - id
                  status:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - data
                  - status
                  - message
                x-examples:
                  example-1:
                    data:
                      name: isaac
                      email: isaac4@example.com
                      uuid: 8f6395a2-4d4e-47d1-96e8-f8a3cc3ca08e
                      updated_at: '2022-04-17T15:35:36.000000Z'
                      created_at: '2022-04-17T15:35:36.000000Z'
                      id: 3
                    status: success
                    message: Subscription User created successfully
      operationId: post-api-subscription-users
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                email:
                  type: string
                  minLength: 1
              required:
                - name
                - email
              x-examples:
                example-1:
                  name: isaac
                  email: isaac2@example.com
  /api/subscription/create:
    post:
      summary: Create subscription
      tags:
        - Subscription Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      subscription_user_id:
                        type: string
                        minLength: 1
                      website_id:
                        type: string
                        minLength: 1
                      uuid:
                        type: string
                        minLength: 1
                      updated_at:
                        type: string
                        minLength: 1
                      created_at:
                        type: string
                        minLength: 1
                      id:
                        type: number
                    required:
                      - subscription_user_id
                      - website_id
                      - uuid
                      - updated_at
                      - created_at
                      - id
                  status:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - data
                  - status
                  - message
                x-examples:
                  example-1:
                    data:
                      subscription_user_id: '2'
                      website_id: '4'
                      uuid: 6dac5a5d-c96a-4c83-ae8e-ff7cc951a48e
                      updated_at: '2022-04-17T15:38:24.000000Z'
                      created_at: '2022-04-17T15:38:24.000000Z'
                      id: 2
                    status: success
                    message: User successfully subscribed
      operationId: post-api-subscription-create
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                subscription_user_id:
                  type: string
                  minLength: 1
                website_id:
                  type: string
                  minLength: 1
              required:
                - subscription_user_id
                - website_id
              x-examples:
                example-1:
                  subscription_user_id: '2'
                  website_id: '3'
  /api/subscription/remove:
    post:
      summary: Remove/ Unsubscribe user
      tags:
        - Subscription Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: number
                  status:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - data
                  - status
                  - message
                x-examples:
                  example-1:
                    data: 1
                    status: success
                    message: User subscription successfully removed
      operationId: post-api-subscription-remove
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                subscription_user_id:
                  type: string
                  minLength: 1
                website_id:
                  type: string
                  minLength: 1
              required:
                - subscription_user_id
                - website_id
              x-examples:
                example-1:
                  subscription_user_id: '2'
                  website_id: '3'
  '/api/website/{website_id}':
    parameters:
      - schema:
          type: string
        name: website_id
        in: path
        required: true
        description: Website id
    put:
      summary: Update website
      tags:
        - Website
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                      uuid:
                        type: string
                        minLength: 1
                      name:
                        type: string
                        minLength: 1
                      url:
                        type: string
                        minLength: 1
                      status:
                        type: number
                      created_at:
                        type: string
                        minLength: 1
                      updated_at:
                        type: string
                        minLength: 1
                      deleted_at: {}
                    required:
                      - id
                      - uuid
                      - name
                      - url
                      - status
                      - created_at
                      - updated_at
                  status:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - data
                  - status
                  - message
                x-examples:
                  example-1:
                    data:
                      id: 3
                      uuid: bf6ca748-c26a-4549-a2d9-f8079df9c05f
                      name: Website one
                      url: 'http://website.com'
                      status: 0
                      created_at: '2022-04-17T13:35:41.000000Z'
                      updated_at: '2022-04-17T13:35:41.000000Z'
                      deleted_at: null
                    status: success
                    message: Website updated successfully
      operationId: put-api-website-website_id
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                url:
                  type: string
                  minLength: 1
              required:
                - name
                - url
              x-examples:
                example-1:
                  name: Website one
                  url: 'http://website.com'
    patch:
      summary: Update website
      tags:
        - Website
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                      uuid:
                        type: string
                        minLength: 1
                      name:
                        type: string
                        minLength: 1
                      url:
                        type: string
                        minLength: 1
                      status:
                        type: number
                      created_at:
                        type: string
                        minLength: 1
                      updated_at:
                        type: string
                        minLength: 1
                      deleted_at: {}
                    required:
                      - id
                      - uuid
                      - name
                      - url
                      - status
                      - created_at
                      - updated_at
                  status:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - data
                  - status
                  - message
                x-examples:
                  example-1:
                    data:
                      id: 3
                      uuid: bf6ca748-c26a-4549-a2d9-f8079df9c05f
                      name: Website one
                      url: 'http://website.com'
                      status: 0
                      created_at: '2022-04-17T13:35:41.000000Z'
                      updated_at: '2022-04-17T13:35:41.000000Z'
                      deleted_at: null
                    status: success
                    message: Website updated successfully
      operationId: patch-api-website-website_id
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                url:
                  type: string
                  minLength: 1
              required:
                - name
                - url
              x-examples:
                example-1:
                  name: Website one
                  url: 'http://website.com'
    delete:
      summary: Delete website
      tags:
        - Website
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: array
                    items:
                      required: []
                      properties: {}
                  status:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - data
                  - status
                  - message
                x-examples:
                  example-1:
                    data: []
                    status: success
                    message: Website deleted successfully
      operationId: delete-api-website-website_id
  '/api/post/{post_id}':
    parameters:
      - schema:
          type: string
        name: post_id
        in: path
        required: true
    put:
      summary: Update post
      tags:
        - Post Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                      uuid:
                        type: string
                        minLength: 1
                      title:
                        type: string
                        minLength: 1
                      content:
                        type: string
                        minLength: 1
                      slug:
                        type: string
                        minLength: 1
                      website_id:
                        type: number
                      created_at:
                        type: string
                        minLength: 1
                      updated_at:
                        type: string
                        minLength: 1
                      deleted_at: {}
                    required:
                      - id
                      - uuid
                      - title
                      - content
                      - slug
                      - website_id
                      - created_at
                      - updated_at
                  status:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - data
                  - status
                  - message
                x-examples:
                  example-1:
                    data:
                      id: 1
                      uuid: e4b361c9-bbe0-4a2b-b59f-c33379985af9
                      title: Awesome postasd
                      content: Test content
                      slug: example-post-282
                      website_id: 3
                      created_at: '2022-04-17T15:15:23.000000Z'
                      updated_at: '2022-04-17T16:09:38.000000Z'
                      deleted_at: null
                    status: success
                    message: Post updated successfully
      operationId: put-api-post-post_id
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                title:
                  type: string
                  minLength: 1
                content:
                  type: string
                  minLength: 1
                slug:
                  type: string
                  minLength: 1
              required:
                - title
                - content
                - slug
              x-examples:
                example-1:
                  title: Awesome postasd
                  content: Test content
                  slug: example-post-28
          application/xml:
            schema:
              type: object
              properties: {}
        description: ''
    delete:
      summary: Delete post
      tags:
        - Post Management
      responses: {}
      operationId: delete-api-post-post_id
    patch:
      summary: Update post
      tags:
        - Post Management
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                      uuid:
                        type: string
                        minLength: 1
                      title:
                        type: string
                        minLength: 1
                      content:
                        type: string
                        minLength: 1
                      slug:
                        type: string
                        minLength: 1
                      website_id:
                        type: number
                      created_at:
                        type: string
                        minLength: 1
                      updated_at:
                        type: string
                        minLength: 1
                      deleted_at: {}
                    required:
                      - id
                      - uuid
                      - title
                      - content
                      - slug
                      - website_id
                      - created_at
                      - updated_at
                  status:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - data
                  - status
                  - message
                x-examples:
                  example-1:
                    data:
                      id: 1
                      uuid: e4b361c9-bbe0-4a2b-b59f-c33379985af9
                      title: Awesome postasd
                      content: Test content
                      slug: example-post-282
                      website_id: 3
                      created_at: '2022-04-17T15:15:23.000000Z'
                      updated_at: '2022-04-17T16:09:38.000000Z'
                      deleted_at: null
                    status: success
                    message: Post updated successfully
      operationId: patch-api-post-post_id
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                title:
                  type: string
                  minLength: 1
                content:
                  type: string
                  minLength: 1
                website_id:
                  type: number
                slug:
                  type: string
                  minLength: 1
              required:
                - title
                - content
                - website_id
                - slug
              x-examples:
                example-1:
                  title: Awesome postasd
                  content: Test content
                  website_id: 3
                  slug: example-post-282
  '/api/subscription-users/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: Update user
      tags:
        - Subscription Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                      uuid:
                        type: string
                        minLength: 1
                      name:
                        type: string
                        minLength: 1
                      email:
                        type: string
                        minLength: 1
                      active:
                        type: number
                      created_at:
                        type: string
                        minLength: 1
                      updated_at:
                        type: string
                        minLength: 1
                      deleted_at: {}
                    required:
                      - id
                      - uuid
                      - name
                      - email
                      - active
                      - created_at
                      - updated_at
                  status:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - data
                  - status
                  - message
                x-examples:
                  example-1:
                    data:
                      id: 2
                      uuid: 4c7f72fd-e6c9-4fb6-931c-c1c10bee0e45
                      name: isaac
                      email: isaac@example-site.com
                      active: 1
                      created_at: '2022-04-17T14:26:30.000000Z'
                      updated_at: '2022-04-17T16:12:24.000000Z'
                      deleted_at: null
                    status: success
                    message: Subscription User updated successfully
      operationId: put-api-subscription-users-id
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                email:
                  type: string
                  minLength: 1
              required:
                - name
                - email
              x-examples:
                example-1:
                  name: isaac
                  email: isaac@example-site.com
    patch:
      summary: Update user
      tags:
        - Subscription Users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: number
                      uuid:
                        type: string
                        minLength: 1
                      name:
                        type: string
                        minLength: 1
                      email:
                        type: string
                        minLength: 1
                      active:
                        type: number
                      created_at:
                        type: string
                        minLength: 1
                      updated_at:
                        type: string
                        minLength: 1
                      deleted_at: {}
                    required:
                      - id
                      - uuid
                      - name
                      - email
                      - active
                      - created_at
                      - updated_at
                  status:
                    type: string
                    minLength: 1
                  message:
                    type: string
                    minLength: 1
                required:
                  - data
                  - status
                  - message
                x-examples:
                  example-1:
                    data:
                      id: 2
                      uuid: 4c7f72fd-e6c9-4fb6-931c-c1c10bee0e45
                      name: isaac
                      email: isaac@example-site.com
                      active: 1
                      created_at: '2022-04-17T14:26:30.000000Z'
                      updated_at: '2022-04-17T16:12:24.000000Z'
                      deleted_at: null
                    status: success
                    message: Subscription User updated successfully
            application/xml:
              schema:
                type: object
                properties: {}
      operationId: patch-api-subscription-users-id
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                email:
                  type: string
                  minLength: 1
              required:
                - name
                - email
              x-examples:
                example-1:
                  name: isaac
                  email: isaac@example-site.com
    delete:
      summary: Delete user
      tags:
        - Subscription Users
      responses: {}
      operationId: delete-api-subscription-users-id
components:
  schemas: {}
